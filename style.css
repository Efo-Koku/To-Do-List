* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/*
The *code above removes any default body styling from the browser.
*/


/* Colors considered
#b89319

#fa9073

#74b49b

#b0eacd

#756c83

#55ae95

#000000

#aaaaaa

#fff

*/



body{
    background-image: linear-gradient(135deg,#000000, #aaaaaa); 
    color: #fff;
    font-family: "Poppins", sans-serif;
    min-height: 100vh;
}

/*
In CSS, the linear-gradient() function creates an image consisting of a progressive transition between two or more colors along a straight line. 
Its result is an object of the <gradient> data type, which is a special kind of <image>
As shown in the body's background-image above.
*/


header{
    font-size: 1.5rem;
}

header, 
form {
    min-height: 20vh;
    display: flex;
    justify-content: center;
    align-items: center;
}

form input,
form button {
    padding: 0.5rem;
    font-size: 2rem;
    border: none;
    background: #fff;
}

form button{
    color:#ec8e74;
    background: #fff;
    cursor: pointer;
    transition: all 0.3s ease;
    font-size: 2rem;
}


form button:hover {
    background:#ca664a;
    color: #fff;
}



.todo-container{
    display: flex;
    justify-content: center;
    align-items: center;
}

.todo-list{
    min-width: 30%;
    list-style: none;
}



.todo{
    margin: 0.5rem;
    background: #fff;
    color: #000000;
    font-size: 1.5rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    transition: all 0.5s ease;
}

.todo li{
    flex: 1;
}

.trash-btn,
.complete-btn {
    background: #dd613e;
    color:#fff;
    border: none;
    padding: 1rem;
    cursor: pointer;
    font-size: 1rem;
}



.complete-btn{
    background-color:#55ae95;
}

.todo-item {
    padding: 0rem 0.5rem;
}

.fa-trash,
.fa-check{
    pointer-events: none;
}

.completed{
    text-decoration: line-through;
    opacity: 0.5;
}

.fall{
    transform: translateY(8rem) rotateZ(25deg);
    opacity: 0;
}

/*
We can't style the actual <select> without first removing all the pre-stylling from it.
We then style the <div> with a class name of "select".
*/
select{
  -webkit-appearance: none;
  -moz-appearance: none;
   appearance: none;
   outline: none;
   border: none;
}

.select{
   margin: 1rem;
   position: relative;
   overflow: hidden;
}

select {
    color: #fa9073;
    width: 10rem;
    cursor: pointer;
    padding: 1.2rem;
    
}

.select:hover::after{
    background:#ca664a;
    color:#fff;

}



/*
The :before and :after selectors in CSS is used to add content before and after an element. 
The :hover is a pseudo-class and :before & :after are pseudo-elements. 
In CSS, pseudo-elements are written after pseudo-classes.
*/

.select::after{
    content: "\25BC";
    position: absolute;
    background: #fa9073;
    top: 0;
    right: 0;
    padding: 1rem;
    pointer-events: none;
    transition: all 0.3s ease;
   
} 


.filter-todo{
    display: flex;
    flex-direction: column;
    align-items: center;
}

/*
@media screen and (max-width: 700px){
    header {
        font-size: 1.2rem;
    } 

    form input,
    form button {
        padding: 0.5rem;
        font-size: 1.9rem;
        background: #fff;
    }

    select {
       width: 16rem;
       padding: 1rem;
       font-size: 1rem;
   
  }
}

@media screen and (max-width: 500px) {
    form input,
    form {
        flex-direction: column;
    }

    
    select {
        background: #fff;
   }
}

*/

